{"version":3,"sources":["components/Utils.tsx","components/CopyBtn.tsx","components/View.tsx","components/Create.tsx","components/Main.tsx","index.tsx"],"names":["Shadow","tmp","i","window","screen","height","push","join","Input","props","className","label","type","ref","refs","CopyBtn","useState","before","State","setState","onClick","navigator","clipboard","writeText","str","after","View","id","useParams","Card","setCard","a","fetch","ENDPOINT","method","result","json","js","card","alert","err","useEffect","console","log","ReadCardByID","style","boxShadow","author","name","job","email","to","Create","useRef","ResultURL","setResultURL","Fetching","setFetching","current","value","body","JSON","stringify","headers","response","location","host","Main","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4647f6d.chunk.js","sourcesContent":["export function Shadow(): string {\r\n    let tmp: Array<string> = [];\r\n    for (let i = 1; i <= window.screen.height; i++) tmp.push(`#ffb07b ${i}px ${i}px`);\r\n\r\n    return tmp.join(\",\");\r\n}\r\n\r\ninterface InputProps {\r\n    label: string,\r\n    refs: React.RefObject<HTMLInputElement>\r\n}\r\nexport function Input(props:InputProps) {\r\n    return (\r\n        <div className=\"Input\">\r\n            <div className=\"label\">{props.label}</div>\r\n            <input type=\"text\" ref={props.refs} />\r\n        </div>\r\n    )\r\n}","import React, { LegacyRef, useRef, useState } from 'react';\r\n\r\ninterface props {\r\n    str: string,\r\n    before: string,\r\n    after: string\r\n}\r\nfunction CopyBtn(props: props) {\r\n    const [State, setState] = useState<string>(props.before);\r\n\r\n    function Copy() {\r\n        navigator.clipboard.writeText(props.str);\r\n        setState(props.after);\r\n    }\r\n\r\n    return (\r\n        <button onClick={Copy}>\r\n            {State}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default CopyBtn;","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, useParams, Route, Link } from 'react-router-dom';\r\nimport '../style/View.css';\r\n\r\nimport { ENDPOINT } from '../Config.json';\r\nimport { Shadow } from './Utils';\r\nimport CopyBtn from './CopyBtn';\r\n\r\nexport interface Card_T {\r\n    [index: string]: string | undefined,\r\n    id?: string | undefined,\r\n    name: string,\r\n    job: string,\r\n    email: string,\r\n    author: string\r\n}\r\n\r\nfunction View() {\r\n    const { id } = useParams<{id: string}>();\r\n    const [Card, setCard] = useState<Card_T>();\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        ReadCardByID(id);\r\n    }, [id]);\r\n\r\n    async function ReadCardByID(id: string) {\r\n        let result = await fetch(`${ENDPOINT}/v1/card/${id}`, {\r\n            method: \"GET\"\r\n        });\r\n        // console.log(await result.text());\r\n        let js: {card?: Card_T, err?: string} = await result.json();\r\n\r\n        if (js.card) setCard(js.card);\r\n        else alert(js.err);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Float View\" style={{boxShadow: Shadow()}}>\r\n            <div className=\"Left\">\r\n                {Card&&\r\n                    <div className=\"Card\">\r\n                        <h1>{Card.author} 의 명함</h1>\r\n                        <div className=\"info\">\r\n                            <div><span>이름: {Card.name}</span> <CopyBtn str={Card.name} before={\"복사\"} after={\"완료\"}/></div>\r\n                            <div><span>직업: {Card.job}</span> <CopyBtn str={Card.job} before={\"복사\"} after={\"완료\"}/></div>\r\n                            <div><span>이메일: {Card.email}</span> <CopyBtn str={Card.email} before={\"복사\"} after={\"완료\"}/></div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className=\"Right\">\r\n                <div className=\"description\">\r\n                    <h3>온라인 명함</h3>\r\n                    \r\n                    <div>기존 종이 명함의 불편한</div>\r\n                    <div>점들을 해결하고자 개발된 서비스 입니다.</div>\r\n                    <br />\r\n                    <div>명함을 만들고 나면</div>\r\n                    <div> <strong>URL/QR Code</strong> </div>\r\n                    <div>로 간단하게 접속 가능합니다.</div>\r\n                    <br />\r\n                    <Link to=\"/\"><button>명함 만들기</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default View;","import React, { useRef, useState } from 'react';\r\nimport QRCode from 'qrcode.react';\r\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport { ENDPOINT } from '../Config.json';\r\n\r\nimport '../style/Create.css';\r\nimport { Input, Shadow } from './Utils';\r\nimport CopyBtn from './CopyBtn';\r\n\r\n\r\nfunction Create() {\r\n    const name = useRef<HTMLInputElement>(null);\r\n    const job = useRef<HTMLInputElement>(null);\r\n    const email = useRef<HTMLInputElement>(null);\r\n\r\n    const [ResultURL, setResultURL] = useState<string>(\"\");\r\n    const [Fetching, setFetching] = useState<boolean>(false);\r\n\r\n    async function Upload() {\r\n        if (name && job && email && !Fetching) {\r\n            setFetching(true);\r\n            const Card = {\r\n                name: name.current?.value,\r\n                job: job.current?.value,\r\n                email: email.current?.value,\r\n                author: \"익명 사용자\"\r\n            }\r\n\r\n            let response = await fetch(`${ENDPOINT}/v1/card/create`, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(Card),\r\n                headers: {'Content-Type': 'application/json'}\r\n            });\r\n            let result: {id?: string, err?: string} = await response.json();\r\n\r\n            if (result.id) {\r\n                // alert(`${ENDPOINT}/view/${result.id}`);\r\n                setResultURL(`/view/${result.id}`);\r\n            } else {\r\n                alert(result.err);\r\n            }\r\n            setFetching(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Float Create\" style={{boxShadow: Shadow()}}>\r\n            <div className=\"Left\">\r\n                <div className=\"containor\">\r\n                    <h1 className=\"ViewTitle\">명함 만들기</h1>\r\n\r\n                    <div className=\"InputField\">\r\n                        <Input label=\"이름\" refs={name} />\r\n                        <Input label=\"직업\" refs={job} />\r\n                        <Input label=\"이메일\" refs={email} />\r\n                    </div>\r\n\r\n                    <button onClick={Upload}>생성</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"Right\">\r\n                {ResultURL?\r\n                    <>\r\n                        <div>Share this QR Code/URL</div><br />\r\n                        <QRCode value={`https://${window.location.host}${ResultURL}`} /><br /><br />\r\n                        \r\n                        <div className=\"BtnList\">\r\n                            <Link to={ResultURL}><button>명함 열기</button></Link>\r\n                            <CopyBtn str={`https://${window.location.host}${ResultURL}`} before=\"URL 복사\" after={\"복사 완료\"}></CopyBtn>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    \r\n                    <div className=\"description\">\r\n                        <h3>온라인 명함</h3>\r\n                        \r\n                        <div>기존 종이 명함의 불편한</div>\r\n                        <div>점들을 해결하고자 개발된 서비스 입니다.</div>\r\n                        <br />\r\n                        <div>명함을 만들고 나면</div>\r\n                        <div> <strong>URL/QR Code</strong> </div>\r\n                        <div>로 간단하게 접속 가능합니다.</div>\r\n                        <br />\r\n                        명함이 만들어지면 여기에 표시됩니다.\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Create;","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport View from './View';\r\nimport Create from './Create';\r\n\r\nfunction Main() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/view/:id\">\r\n\t\t\t\t\t<View />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Create />\r\n\t\t\t\t</Route>\r\n\t\t\t</Switch>\r\n\r\n\t\t</Router>\r\n\t)\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport Main from './components/Main';\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}